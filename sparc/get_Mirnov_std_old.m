function Mirnov_std=get_Mirnov_std(shot,timebase,Mirnov_sensor)

 % for shots before 2016, all available sensors are:
 % Mirnov_sensor = {'BP_AB_TOP', ...
 %             'BP1T_ABK' , ...
 %             'BP2T_ABK' , ...
 %             'BP3T_ABK' , ...
 %             'BP05_ABK' , ...
 %             'BP_BC_TOP', ...
 %             'BP_EF_TOP', ...
 %             'BP1T_GHK' , ...
 %             'BP2T_GHK' , ...
 %             'BP3T_GHK' , ...
 %             'BP05_GHK' , ...
 %             'BP_KA_TOP' , ...
 %             'BP02_GHK'};

 % for shots during the 2016 campaign, all available sensors are:
 % Mirnov_sensor = {'BP_AB_TOP', ...
 %             'BP17_ABK' , ...
 %             'BP1T_ABK' , ...
 %             'BP2T_ABK' , ...
 %             'BP3T_ABK' , ...
 %             'BP05_ABK' , ...
 %             'BP_BC_TOP', ...
 %             'BP_EF_TOP', ...
 %             'BP20_GHK' , ...
 %             'BP1T_GHK' , ...
 %             'BP2T_GHK' , ...
 %             'BP3T_GHK' , ...
 %             'BP05_GHK' , ...
 %             'BP02_GHK' }; 

if (nargin<3)
    Mirnov_sensor={'BP02_GHK'};
end
 
if (size(timebase,2) > 1);
  timebase = transpose(timebase);
end

nsensors = length(Mirnov_sensor);
ntimes = length(timebase);
Mirnov_std = NaN(nsensors, ntimes);

[~, status] = mdsopen('magnetics', shot);
if (mod(status,2) == 0);
  return;
end; 

time_window=0.001;
mdstcl('set default \top.active_mhd.signals');

for isensor = 1:nsensors;
  [time, status1] = mdsvalue(['dim_of(' Mirnov_sensor{isensor} ')']); % 5 MHz!
  [bp_dot, status2] = mdsvalue(Mirnov_sensor(isensor));  % tesla/s
  if mod(status1,2) == 0 || mod(status2,2) == 0 || ...
     length(bp_dot) == 1 || length(time) == 1 || ...
     length(find(~isnan(time)))   <= 1 || ...
     length(find(~isnan(bp_dot))) <= 1 || ...
     length(time) ~= length(bp_dot);
    mdsclose;
    return; 
  end;
  
  for i=1:ntimes;
      indx = find(time > (timebase(i)-time_window) & time < timebase(i));
      Mirnov_std(isensor,i)=std(bp_dot(indx),'omitnan');
  end;
  
end;
mdsclose;
end
